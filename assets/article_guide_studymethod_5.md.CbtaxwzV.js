import{_ as s,c as a,o as i,a1 as t}from"./chunks/framework.t0t3spwR.js";const m=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"article/guide/studymethod/5.md","filePath":"article/guide/studymethod/5.md"}'),e={name:"article/guide/studymethod/5.md"},p=t(`<h2 id="知识点分类" tabindex="-1">知识点分类 <a class="header-anchor" href="#知识点分类" aria-label="Permalink to &quot;知识点分类&quot;">​</a></h2><p>编程语言的知识点，大致分为两类，第一类，需要死记硬背的，第二类，灵活运用的，这样分类有个好处就是可以很明确的指导我们的学习方法</p><h3 id="死记硬背" tabindex="-1">死记硬背 <a class="header-anchor" href="#死记硬背" aria-label="Permalink to &quot;死记硬背&quot;">​</a></h3><p>一些固定不变的知识点，你需要记住，记住就能写，或者说要写必须要记住，那意味着在学习的时候方法就很灵活也可以很粗暴，举个例子：</p><p>for 循环的结构</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> i</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;i</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;i</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">++</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">){</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    ...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>这种语法结构，你是不是应该先记住，然后再写，类似的需要记住的知识点，你要掌握至少有两种方法</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>1.多做练习，在练习中记住</span></span>
<span class="line"><span></span></span>
<span class="line"><span>2.暴力点，手写20遍</span></span></code></pre></div><p>有一个前提，这些语法规则是死的，你必须这么写，但是它的运行机制你需要了解，比如这个循环结构，先执行什么，再执行什么，这个是必须要理解的，从本课程第二章开始，我们会具体针对编程语言的知识点给出学习建议，到底是记住还是理解，会给出建议</p><h3 id="灵活应用" tabindex="-1">灵活应用 <a class="header-anchor" href="#灵活应用" aria-label="Permalink to &quot;灵活应用&quot;">​</a></h3><p>灵活应用的前提是你脑袋里面有这个知识点，例如：我们做数学题的时候，脑袋里面储备的知识越多，解题方法就越多，如果脑袋里面没有储备这个公式，你就是挤破脑袋都想不出来，所以前面我们说的死记硬背的知识点是非常重要的，要记住的知识点其实不多，有些知识点直接查手册就行</p><p>算法是程序的灵活，在掌握完了上一节课程中我们说的通用知识点，就可以每天刷一刷算法了，刷算法的开源书，推荐：<a href="https://books.halfrost.com/leetcode/" target="_blank" rel="noreferrer">点击进入</a></p><p>中文 leetcode，<a href="https://leetcode-cn.com/problem-list/2cktkvj/" target="_blank" rel="noreferrer">点击进入</a>，可以先去注册一个账号</p><p>在 vscode 中练习算法</p><p>第一步，安装 leetcode 插件</p><p><img src="https://nodeing-com-1252923609.cos.ap-chengdu.myqcloud.com//document20221025102520.png" alt="20221025102520"></p><p>第二步，登录</p><p><img src="https://nodeing-com-1252923609.cos.ap-chengdu.myqcloud.com//document20221025102644.png" alt="20221025102644"></p><p>选中国版本</p><p><img src="https://nodeing-com-1252923609.cos.ap-chengdu.myqcloud.com//document20221025102756.png" alt="20221025102756"></p><p>登录账号（可以使用手机号登录）</p><p><img src="https://nodeing-com-1252923609.cos.ap-chengdu.myqcloud.com//document20221025102840.png" alt="20221025102840"></p><p>登录成功后，左侧点开即可刷题</p><p><img src="https://nodeing-com-1252923609.cos.ap-chengdu.myqcloud.com//document20221025103148.png" alt="20221025103148"></p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>长期坚持，不可一蹴而就</p></div>`,25),n=[p];function l(o,c,h,d,r,k){return i(),a("div",null,n)}const u=s(e,[["render",l]]);export{m as __pageData,u as default};
