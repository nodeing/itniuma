import{_ as t,c as s,o as a,a1 as i}from"./chunks/framework.t0t3spwR.js";const E=JSON.parse('{"title":"运算符","description":"","frontmatter":{},"headers":[],"relativePath":"learn-path/go/golang-basis/chapter4/index.md","filePath":"learn-path/go/golang-basis/chapter4/index.md"}'),e={name:"learn-path/go/golang-basis/chapter4/index.md"},n=i(`<h1 id="运算符" tabindex="-1">运算符 <a class="header-anchor" href="#运算符" aria-label="Permalink to &quot;运算符&quot;">​</a></h1><p>对于计算机来说，除了存储数据和展示数据以外，还有数据运算的功能，要不然怎么能称作计算机呢？这一章我们需要学习一下计算机中的各种运算符，本质上来说，运算符代表了某种运算规则，意味着你看到这个符号就应该知道它应该遵循什么样的运算规则，例如：”+“ 这个符号，那么你就应该知道 1+1 的结果应该是 2， 它遵循的是一种加法的运算规则，那么你应该知道学习的核心了，那就是搞清楚 每个符号对应的规则 应该是怎样的</p><h2 id="算术运算符" tabindex="-1">算术运算符 <a class="header-anchor" href="#算术运算符" aria-label="Permalink to &quot;算术运算符&quot;">​</a></h2><p>算术运算符和我们数学中的运算规则是一致的</p><table><thead><tr><th style="text-align:center;">运算符</th><th style="text-align:center;">术语</th><th style="text-align:center;">例子</th><th style="text-align:center;">结果</th></tr></thead><tbody><tr><td style="text-align:center;">+</td><td style="text-align:center;">加</td><td style="text-align:center;">20+30</td><td style="text-align:center;">50</td></tr><tr><td style="text-align:center;">-</td><td style="text-align:center;">减</td><td style="text-align:center;">20-30</td><td style="text-align:center;">-10</td></tr><tr><td style="text-align:center;">*</td><td style="text-align:center;">乘</td><td style="text-align:center;">20*3</td><td style="text-align:center;">60</td></tr><tr><td style="text-align:center;">/</td><td style="text-align:center;">除</td><td style="text-align:center;">20/20</td><td style="text-align:center;">1</td></tr><tr><td style="text-align:center;">++</td><td style="text-align:center;">自加,注意没有前自加</td><td style="text-align:center;">a=0;a++</td><td style="text-align:center;">a=1</td></tr><tr><td style="text-align:center;">--</td><td style="text-align:center;">自减,注意没有前自减</td><td style="text-align:center;">a=1;a--</td><td style="text-align:center;">a=0</td></tr></tbody></table><p>代码示范：</p><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">package</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> main</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">fmt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">func</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()  {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	a </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	a</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">++</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	fmt.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Println</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(a) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 1</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="_4-2-赋值运算符" tabindex="-1">4.2.赋值运算符 <a class="header-anchor" href="#_4-2-赋值运算符" aria-label="Permalink to &quot;4.2.赋值运算符&quot;">​</a></h2><table><thead><tr><th style="text-align:center;">运算符</th><th style="text-align:center;">说明</th><th style="text-align:center;">例子</th></tr></thead><tbody><tr><td style="text-align:center;">=</td><td style="text-align:center;">普通赋值运算</td><td style="text-align:center;">a := 20, 定义变量 a，并且 20 赋值给它</td></tr><tr><td style="text-align:center;">+=</td><td style="text-align:center;">相加后赋值</td><td style="text-align:center;">c += a，等价于 c = c + a</td></tr><tr><td style="text-align:center;">-=</td><td style="text-align:center;">相减后赋值</td><td style="text-align:center;">c -= a，等价于 c = c - a</td></tr><tr><td style="text-align:center;">*=</td><td style="text-align:center;">相乘后赋值</td><td style="text-align:center;">c _= a，等价于 c = c _ a</td></tr><tr><td style="text-align:center;">/=</td><td style="text-align:center;">相除后赋值</td><td style="text-align:center;">c /= a，等价于 c = c / a</td></tr><tr><td style="text-align:center;">%=</td><td style="text-align:center;">取余后赋值</td><td style="text-align:center;">c %= a，等价于 c = c % a</td></tr></tbody></table><p>注意上面的规律</p><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">package</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> main</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">fmt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">func</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()  {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	a </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 5</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	c </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	c </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> a</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	fmt.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Println</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(c) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 10</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="关系运算符" tabindex="-1">关系运算符 <a class="header-anchor" href="#关系运算符" aria-label="Permalink to &quot;关系运算符&quot;">​</a></h2><table><thead><tr><th style="text-align:center;">运算符</th><th style="text-align:center;">术语</th><th style="text-align:center;">例子</th><th style="text-align:center;">结果 ｜</th></tr></thead><tbody><tr><td style="text-align:center;">==</td><td style="text-align:center;">相等</td><td style="text-align:center;">3 == 3</td><td style="text-align:center;">true</td></tr><tr><td style="text-align:center;">!=</td><td style="text-align:center;">不等</td><td style="text-align:center;">3 != 3</td><td style="text-align:center;">false</td></tr><tr><td style="text-align:center;">&lt;</td><td style="text-align:center;">小于</td><td style="text-align:center;">3 &lt; 3</td><td style="text-align:center;">false</td></tr><tr><td style="text-align:center;">&gt;</td><td style="text-align:center;">大于</td><td style="text-align:center;">3 &gt; 3</td><td style="text-align:center;">false</td></tr><tr><td style="text-align:center;">&lt;=</td><td style="text-align:center;">小于等于</td><td style="text-align:center;">3 &lt;= 3</td><td style="text-align:center;">true</td></tr><tr><td style="text-align:center;">&gt;=</td><td style="text-align:center;">大于等于</td><td style="text-align:center;">3 &gt;= 3</td><td style="text-align:center;">true</td></tr></tbody></table><p>代码演示</p><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">package</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> main</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">fmt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">func</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()  {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	a </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 3</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	b </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 3</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	fmt.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Printf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">%v</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, a </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">==</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> b)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="逻辑运算符" tabindex="-1">逻辑运算符 <a class="header-anchor" href="#逻辑运算符" aria-label="Permalink to &quot;逻辑运算符&quot;">​</a></h2><p>Go 语言中常用逻辑运算符</p><table><thead><tr><th style="text-align:center;">运算符</th><th style="text-align:center;">术语</th><th style="text-align:center;">例子</th><th style="text-align:center;">结果</th></tr></thead><tbody><tr><td style="text-align:center;">!</td><td style="text-align:center;">非</td><td style="text-align:center;">!a</td><td style="text-align:center;">取反，如果 a 为 true，结果为 false，如果 a 为 true，结果为 false</td></tr><tr><td style="text-align:center;">&amp;&amp;</td><td style="text-align:center;">与</td><td style="text-align:center;">a &amp;&amp; a</td><td style="text-align:center;">并且，a 和 b 都为 true，结果才为 true，有一个 false，结果为 false</td></tr><tr><td style="text-align:center;">||</td><td style="text-align:center;">或</td><td style="text-align:center;">a || b</td><td style="text-align:center;">或者，a 或者 b 有一个为 true，结果为 true，有真为真</td></tr></tbody></table><p>代码演示</p><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">package</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> main</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">fmt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">func</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()  {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	a </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 3</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	b </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 4</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	c </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 5</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	d </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 6</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	fmt.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Printf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">%v</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, a </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">==</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> b </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">||</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> c </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> d)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="运算符优先级" tabindex="-1">运算符优先级 <a class="header-anchor" href="#运算符优先级" aria-label="Permalink to &quot;运算符优先级&quot;">​</a></h2><p><img src="https://nodeing-book.oss-cn-beijing.aliyuncs.com/nodeing-dashu-blog/20210529230455.png" alt="20210529230455"></p><p>注意：括号&quot;()&quot;的优先级最高，当你分不清楚优先级的时候，你可以使用括号把优先级提升</p><p>例如：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>a + b * c ==&gt; 提升 a + b 优先级 ==&gt; (a + b) * c</span></span></code></pre></div>`,25),l=[n];function h(p,d,k,r,g,c){return a(),s("div",null,l)}const o=t(e,[["render",h]]);export{E as __pageData,o as default};
