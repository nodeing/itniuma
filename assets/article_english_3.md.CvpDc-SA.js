import{_ as a,c as s,o as e,a1 as l}from"./chunks/framework.t0t3spwR.js";const k=JSON.parse('{"title":"动词预期","description":"","frontmatter":{},"headers":[],"relativePath":"article/english/3.md","filePath":"article/english/3.md"}'),i={name:"article/english/3.md"},n=l(`<h1 id="动词预期" tabindex="-1">动词预期 <a class="header-anchor" href="#动词预期" aria-label="Permalink to &quot;动词预期&quot;">​</a></h1><h2 id="谓语动词三大特点" tabindex="-1">谓语动词三大特点 <a class="header-anchor" href="#谓语动词三大特点" aria-label="Permalink to &quot;谓语动词三大特点&quot;">​</a></h2><ul><li><p>1.表示动作的时间</p></li><li><p>2.表示动作的状态</p></li><li><p>3.表示动作的假设、情感等</p></li></ul><h2 id="动词的主要语气" tabindex="-1">动词的主要语气 <a class="header-anchor" href="#动词的主要语气" aria-label="Permalink to &quot;动词的主要语气&quot;">​</a></h2><h3 id="_1-陈述语气" tabindex="-1">1.陈述语气 <a class="header-anchor" href="#_1-陈述语气" aria-label="Permalink to &quot;1.陈述语气&quot;">​</a></h3><p>用来描述现实，举例：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>The rabbit ate the carrot</span></span>
<span class="line"><span>这兔子吃了这胡萝卜</span></span></code></pre></div><h3 id="_2-祈使语气" tabindex="-1">2.祈使语气 <a class="header-anchor" href="#_2-祈使语气" aria-label="Permalink to &quot;2.祈使语气&quot;">​</a></h3><p>表示命令、请求，举例：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>Rabbit, eat the carrot</span></span>
<span class="line"><span>兔子，吃这胡萝卜</span></span></code></pre></div><p>小技巧</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>1.用第二人称(你)，一般现在时</p><p>2.去掉你，并保证动词原型</p></div><h3 id="_3-虚拟语气" tabindex="-1">3.虚拟语气 <a class="header-anchor" href="#_3-虚拟语气" aria-label="Permalink to &quot;3.虚拟语气&quot;">​</a></h3><p>表达与现实相悖的，主观意愿，两大用法</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>1.表示不可能假设</span></span>
<span class="line"><span>  与过去相反</span></span>
<span class="line"><span>  与现在相反</span></span>
<span class="line"><span>  与将来相反(可能性小)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>2.表达愿望、请求、命令、建议等</span></span></code></pre></div><h4 id="第一大用法" tabindex="-1">第一大用法 <a class="header-anchor" href="#第一大用法" aria-label="Permalink to &quot;第一大用法&quot;">​</a></h4><blockquote><p>表示不可能假设</p></blockquote><ul><li>与现在相反</li></ul><p>条件句：过去式 主句：would + 动词原型</p><ul><li>与将来相反</li></ul><p>真的不可能，例如：兔子下蛋</p><p>条件句：should + 动词原型 主句：would + 动词原型</p><ul><li>与过去相反</li></ul><p>条件句：had + 动词的过去分词 主句：would + have + 动词的过去分词</p><h4 id="第二大用法" tabindex="-1">第二大用法 <a class="header-anchor" href="#第二大用法" aria-label="Permalink to &quot;第二大用法&quot;">​</a></h4><blockquote><p>表达愿望、请求、命令、建议等,即希望某个动作/事件发生</p></blockquote><ul><li>wish</li></ul><p>对现在的愿望：wish + 动词过去式</p><p>对过去的希望：wish + had/would have + 动词过去分词</p><p>对将来的系统：wish +would/might/could/should + 动词原型</p><h3 id="_4-其他语气" tabindex="-1">4.其他语气 <a class="header-anchor" href="#_4-其他语气" aria-label="Permalink to &quot;4.其他语气&quot;">​</a></h3><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">疑问语气</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">条件语气</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">感叹语气</span></span></code></pre></div><h2 id="总结" tabindex="-1">总结 <a class="header-anchor" href="#总结" aria-label="Permalink to &quot;总结&quot;">​</a></h2><p><img src="https://cdn.jsdelivr.net/gh/nodeing/img-host/20230811214952.png" alt="20230811214952"></p>`,34),t=[n];function p(o,h,c,r,d,u){return e(),s("div",null,t)}const g=a(i,[["render",p]]);export{k as __pageData,g as default};
