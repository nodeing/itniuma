import{_ as s,c as a,o as t,a1 as i}from"./chunks/framework.t0t3spwR.js";const p="/assets/2019-03-23-17-48-05.C3PFBFPa.png",e="/assets/2019-03-23-17-52-54.XbAaZ3AJ.png",n="/assets/2019-03-23-17-54-33.DsEymfRQ.png",l="/assets/2019-03-23-17-57-26.DHD-_mn8.png",c="/assets/2019-03-23-18-01-16.CzXc1Gdc.png",h="/assets/2019-03-23-18-04-19.BDN-U4_U.png",y=JSON.parse('{"title":"Git 高效入门指南","description":"","frontmatter":{},"headers":[],"relativePath":"learn-path/fe/git-github/chapter3/3.md","filePath":"learn-path/fe/git-github/chapter3/3.md"}'),o={name:"learn-path/fe/git-github/chapter3/3.md"},d=i(`<h1 id="git-高效入门指南" tabindex="-1">Git 高效入门指南 <a class="header-anchor" href="#git-高效入门指南" aria-label="Permalink to &quot;Git 高效入门指南&quot;">​</a></h1><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>如果链接失效或者有其他问题，请联系牛马程序员金牌讲师--迈克尔.牛马，微信：Michael-Niuma</p></div><h2 id="_3-3-解决冲突问题" tabindex="-1">3.3.解决冲突问题 <a class="header-anchor" href="#_3-3-解决冲突问题" aria-label="Permalink to &quot;3.3.解决冲突问题&quot;">​</a></h2><p>1.在多人协作开发的项目中，每次开发之前每个人最好先同步更新一下 github 上最新的代码，可以减少冲突的概率</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>git pull</span></span></code></pre></div><p>2.产生冲突</p><p>目前咱们演示项目 git-demo 中有两个开发这，第一个人，nodeing666，第二个，nd-00002，github 仓库中最新的代码是 nd-00002 这个人提交的代码，这个时候，如果 nodeing666 这个人在开发之前并没有拉取 github 中最新的代码，而是直接去修改 index.html 这个页面，例如：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>&lt;style&gt;</span></span>
<span class="line"><span>  body{</span></span>
<span class="line"><span>    // nodeing666 修改了首页背景色</span></span>
<span class="line"><span>    background-color: red;</span></span>
<span class="line"><span>  }</span></span>
<span class="line"><span>&lt;/style&gt;</span></span></code></pre></div><p>代码写完后，nodeing666 把本地代码 push 到 github，此时是提交不上去的，效果如下：</p><p><img src="`+p+'" alt=""></p><p>3.解决冲突</p><p>第一步，产生冲突后，我们首先得去把远程仓库(origin/master)中的代码拉取下来，再去查看哪里产生冲突了,执行命令:</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">git fetch</span></span></code></pre></div><p>执行结果：</p><p><img src="'+e+'" alt=""></p><p>第二步，接下来，我们需要去对比本地 master 分支和远程仓库中的 master 分支</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>git diff master origin/master</span></span></code></pre></div><p>执行结果： <img src="'+n+'" alt=""></p><p>第三步，手动把远程 master 分支和本地 master 分支合并</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">git merge origin</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">master</span></span></code></pre></div><p>执行后，index.html 页面中变成了这样：</p><p><img src="'+l+'" alt=""></p><p>此时，你需要取舍一下，当前冲突的代码到底保留什么，本次案例中，经过讨论，认为背景色保留为红色更好，因此，我们把 index.html 的代码修改成这样：</p><p><img src="'+c+`" alt=""></p><p>经过上一步手动修改代码，咱们已经解决好了冲突</p><p>第四步，重新提交代码并同步到远程仓库</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">git add index.html</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">git commit </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">m </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;解决背景冲突问题&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">git push origin master</span></span></code></pre></div><p>执行结果：</p><p><img src="`+h+'" alt=""></p>',29),r=[d];function g(m,k,u,_,b,v){return t(),a("div",null,r)}const f=s(o,[["render",g]]);export{y as __pageData,f as default};
