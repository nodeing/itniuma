import{_ as a,c as s,o as n,a1 as p}from"./chunks/framework.t0t3spwR.js";const b=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"article/guide/studymethod/1.md","filePath":"article/guide/studymethod/1.md"}'),e={name:"article/guide/studymethod/1.md"},t=p(`<h2 id="课程介绍" tabindex="-1">课程介绍 <a class="header-anchor" href="#课程介绍" aria-label="Permalink to &quot;课程介绍&quot;">​</a></h2><h3 id="课程目标" tabindex="-1">课程目标 <a class="header-anchor" href="#课程目标" aria-label="Permalink to &quot;课程目标&quot;">​</a></h3><p>提升编程学习的效率，解答自学编程过程中会遇见的常见问题</p><h3 id="课程设计" tabindex="-1">课程设计 <a class="header-anchor" href="#课程设计" aria-label="Permalink to &quot;课程设计&quot;">​</a></h3><p>为什么会有这套课程？在我们服务了上万名自学的同学以后，或多或少的都会遇见一些通用的问题，例如：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>1.学了后面的知识，忘了前面的知识，怎么办？</span></span>
<span class="line"><span></span></span>
<span class="line"><span>2.看老师的视频感觉都听懂了，自己写的时候懵逼，无从下手，不知道该怎么办？</span></span>
<span class="line"><span></span></span>
<span class="line"><span>3.跟着老师的代码敲都会敲错，然后来回对比自己的代码和老师代码有什么不同，浪费了大量时间,如何提升调试bug的能力？</span></span>
<span class="line"><span></span></span>
<span class="line"><span>4.刚开始信心满满，越学感觉越迷茫，觉得自己不会的东西越来越多怎么办？</span></span>
<span class="line"><span></span></span>
<span class="line"><span>5.别人学某某课程花了一天，为什么我却花了一个星期，进度慢太焦虑怎么办？</span></span>
<span class="line"><span></span></span>
<span class="line"><span>.....</span></span></code></pre></div><p>这些问题在过来人眼中，非常简单，但对于初学者来说却至关重要，如果对这些问题没有正确的认识，无法正确的对待，会影响整个学习的效率，细节决定成败，我们这边打算做的是一套自学的全栈式解决方案，因此，有必要设计一套方法论课程，把自学编程的底层逻辑给大家讲清楚</p><p>考虑到方法论是有点抽象的，如果只讲方法的话，会出现这样的情况，听了可能恍然大悟，但是依然没什么卵用</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>道理我都懂，但依然过不好一生</span></span></code></pre></div><p>所以，我们在做课程设计的时候，需要考虑一个非常重要的问题</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>需要用实践来证明这个方法确实是比较高效的</span></span></code></pre></div><p>基于这样的考虑，我们的课程大纲是这样的</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>第一部分，通用的编程方法论</span></span>
<span class="line"><span></span></span>
<span class="line"><span>第二部分，视频学习路线重难点解读与学习指导</span></span>
<span class="line"><span></span></span>
<span class="line"><span>第三部分，bug调试案例</span></span></code></pre></div><p>第一部分，只是告诉你用哪些方法可以提升效率，第二部分和第三部分，告诉你如何去实践第一部分提到的一些方法，我们这套课程的名字叫做《自学编程通用方法论践行录》，注意里面的关键字，践行录，我们更多的是要去践行这些方法，而不是听听就完事儿了，就好比你听某个大厂程序员博主告诉你《程序员如何年薪百万》，但真正不去做，也就是听一听，乐一乐，没什么卵用</p><h3 id="使用指南" tabindex="-1">使用指南 <a class="header-anchor" href="#使用指南" aria-label="Permalink to &quot;使用指南&quot;">​</a></h3><p>前面我们讲课程设计的时候，说了一下我们的课程大纲，请回顾一下我们的第二部分内容</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>第二部分，视频学习路线重难点解读与学习指导</span></span></code></pre></div><p>这意味着这套课程是强依赖于我们的视频学习路线的，如果你正好在学我们的免费视频路线，那么，能更好的理解我们在课程中提到的一些学习方法，目前，我们的视频学习路线主力更新的专业是</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>前端开发</span></span>
<span class="line"><span>Java开发</span></span>
<span class="line"><span>Go语言开发</span></span></code></pre></div><p>如果你正在学习我们的学习路线，你跟着课程的目录学习实践即可，如果没有学习我们的学习路线，你也可以尝试着套用我们讲解的方法来实践，另外，我会把一些我们答疑的实录放到我们课程内容的第三部分，你可以当成直播来看，使用指南的核心就两个字：实践，你需要想办法把一些方法实践下去，而实践的过程并不是一朝一夕的事情，例如：我们课程中会将如何培养兴趣，养成良好的学习习惯，这个方法讲了以后，你需要用至少一个月的时间才能验证效果，总结一下</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>编程是实践学科，不去做，永远学不会，实践需要时间，需要可以练习，急功近利，浮躁，任何方法告诉你了，都没有卵用</p></div>`,21),i=[t];function l(c,o,d,h,r,u){return n(),s("div",null,i)}const v=a(e,[["render",l]]);export{b as __pageData,v as default};
