import{_ as p,c as a,o as c,V as n}from"./chunks/framework.AW5yxxpt.js";const h=JSON.parse('{"title":"目录结构","description":"","frontmatter":{},"headers":[],"relativePath":"learn-path/java/java-basic/chapter2/1.md","filePath":"learn-path/java/java-basic/chapter2/1.md"}'),s={name:"learn-path/java/java-basic/chapter2/1.md"},o=n(`<h1 id="目录结构" tabindex="-1">目录结构 <a class="header-anchor" href="#目录结构" aria-label="Permalink to &quot;目录结构&quot;">​</a></h1><h3 id="idea-中的项目结构" tabindex="-1">IDEA 中的项目结构 <a class="header-anchor" href="#idea-中的项目结构" aria-label="Permalink to &quot;IDEA 中的项目结构&quot;">​</a></h3><p>先来理解四个概念</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>Project 这个叫做项目，我们在前面的学习中已经创建过项目</span></span>
<span class="line"><span></span></span>
<span class="line"><span>module 模块，一个项目，可以分为多个模块</span></span>
<span class="line"><span></span></span>
<span class="line"><span>package 包，一个模块，可以包含多个包</span></span>
<span class="line"><span></span></span>
<span class="line"><span>class 类，通常一个类就是一个Java文件（先这么理解）</span></span></code></pre></div><p>它们的结构如下</p><p><img src="https://nodeing-com-1252923609.cos.ap-chengdu.myqcloud.com//document20221204060048.png" alt="20221204060048"></p><p>再来想想，为什么要这样分呢？结论是为了方便代码文件管理，举个例子：我们要开发一个在线教育系统，大致有以下功能</p><p><img src="https://nodeing-com-1252923609.cos.ap-chengdu.myqcloud.com//document20221204060406.png" alt="20221204060406"></p><p>我们根据项目的功能模块去组织代码，按照 project-&gt;module-&gt;package-class 这种方式去组织代码，脉络就会非常清晰</p><p>接下来，我们就具体的去实战一下</p><p>第一步，先建一个非常干净的项目出来</p><p>点击 New Project 创建项目</p><p><img src="https://nodeing-com-1252923609.cos.ap-chengdu.myqcloud.com//document20221204061244.png" alt="20221204061244"></p><p>接下来，创建一个空项目</p><p><img src="https://nodeing-com-1252923609.cos.ap-chengdu.myqcloud.com//document20221204061611.png" alt="20221204061611"></p><p>上面图中 java-demo 是项目名称，需要自己手动填写，location 是存储位置，你需要根据自己电脑的代码存储位置来填写，填写完成后，点 create 即可</p><p><img src="https://nodeing-com-1252923609.cos.ap-chengdu.myqcloud.com//document20221204061812.png" alt="20221204061812"></p><p>这样我们就建好了一个空的项目</p><p>第二步，我们在项目里面新建模块，在项目名字上右键，有弹出菜单，把鼠标移动到 new 上面，会弹出下一级菜单，以此类推，我们点击 module 即可创建模块，如下图</p><p><img src="https://nodeing-com-1252923609.cos.ap-chengdu.myqcloud.com//document20221204061939.png" alt="20221204061939"></p><p>点击 module 后，会出现创建模块的对话框</p><p><img src="https://nodeing-com-1252923609.cos.ap-chengdu.myqcloud.com//document20221204063301.png" alt="20221204063301"></p><p>填写模块名字后，点击创建即可，创建好以后，我们得到一个干净的模块</p><p><img src="https://nodeing-com-1252923609.cos.ap-chengdu.myqcloud.com//document20221204063423.png" alt="20221204063423"></p><p>第三步，创建包，在 src 目录上右键，鼠标移动端 new 上，然后点击 package</p><p><img src="https://nodeing-com-1252923609.cos.ap-chengdu.myqcloud.com//document20221204063754.png" alt="20221204063754"></p><p>接下来，需要输入包名称，注意：包名称是有要求的，一般是公司域名倒写+自定义名称，都用小写字母</p><p><img src="https://nodeing-com-1252923609.cos.ap-chengdu.myqcloud.com//document20221204064200.png" alt="20221204064200"></p><p>输入完成后，敲回车确认</p><p>第四步，创建 Java 类，在包名上右键 --&gt; new --&gt; Java Class</p><p><img src="https://nodeing-com-1252923609.cos.ap-chengdu.myqcloud.com//document20221204064427.png" alt="20221204064427"></p><p>接下来输入类名，然后回车即可，我们这里新疆一个 HelloWorld 类</p><p><img src="https://nodeing-com-1252923609.cos.ap-chengdu.myqcloud.com//document20221204064611.png" alt="20221204064611"></p><p>我们可以在 HelloWorld 这个 Java 类中去写代码，并且运行</p><p><img src="https://nodeing-com-1252923609.cos.ap-chengdu.myqcloud.com//document20221204064854.png" alt="20221204064854"></p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>注意：后续我们的代码都将以这种方式给大家组织</p></div>`,36),e=[o];function t(d,l,m,i,g,u){return c(),a("div",null,e)}const _=p(s,[["render",t]]);export{h as __pageData,_ as default};
