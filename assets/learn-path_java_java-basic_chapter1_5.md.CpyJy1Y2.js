import{_ as a,c as s,o as e,V as t}from"./chunks/framework.AW5yxxpt.js";const b=JSON.parse('{"title":"环境变量","description":"","frontmatter":{},"headers":[],"relativePath":"learn-path/java/java-basic/chapter1/5.md","filePath":"learn-path/java/java-basic/chapter1/5.md"}'),p={name:"learn-path/java/java-basic/chapter1/5.md"},i=t(`<h1 id="环境变量" tabindex="-1">环境变量 <a class="header-anchor" href="#环境变量" aria-label="Permalink to &quot;环境变量&quot;">​</a></h1><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>名词解释：什么是环境变量？给系统或用户应用程序设置的一些参数，具体起什么作用和具体的环境变量相关；什么是 PATH 环境变量？当一个系统运行一个应用程序，但是没有告诉系统这个程序的完整路径，系统除了在当前路径下找，如果没有找到，还应该到哪些路径下去找；设置了 PATH 环境变量有什么好处？你可以在命令行窗口的任意目录启动应用程序，而不需要给完整的路径</p></div><p>举个例子：</p><p>在没有设置环境变量的时候，假设我要启动 java 这个程序，这个程序在我们电脑上的目录如下</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>C:\\local\\java\\jdk19\\bin</span></span></code></pre></div><p>在没有设置环境变量的情况下，那么你在命令行窗口执行命令需要这样写</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>C:\\local\\java\\jdk19\\bin\\java --version</span></span></code></pre></div><p>在设置了环境变量的情况下，你只需要在命令行窗口执行下面这样的命令</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>java --version</span></span></code></pre></div><p>现在你应该明白环境变量的作用了吧，设置了 PATH 环境变量，你运行程序就不需要写完整的路径，直接输入程序的名字即可</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>练习任务：在命令行窗口，启动你的桌面微信，如果没有桌面微信的同学先下载一个，看视频演示，跟着操作</p></div><h3 id="java-home-环境变量" tabindex="-1">JAVA_HOME 环境变量 <a class="header-anchor" href="#java-home-环境变量" aria-label="Permalink to &quot;JAVA_HOME 环境变量&quot;">​</a></h3><p>JAVA_HOME 环境变量是干什么的？</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>名词解释：home 目录 在后续的学习中，你会经常听到有人说 home 目录这个概念，home 的意思就是家，家是你住的地方，你可以放东西的地方，因此，有这样一个概念，用户的 home 目录，其实就是专属于当前登录用户的一些内容会放到这个目录下，有了这个概念的理解，你再来理解 JAVA_HOME,java 的家目录，意思就是 jdk 相关的内容存放的地方</p></div><p>我们配置 JAVA_HOME 的目的就是让系统知道 JDK 的安装目录在哪儿，例如：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>JAVA_HOME=C:\\local\\java\\jdk19</span></span></code></pre></div><p>这个就表示我们的 jdk19 安装在 C:\\local\\java\\jdk19 这个目录下</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>练习任务：自己动手配置 JAVA_HOME 的环境变量，看视频讲解</p></div><p>如果是 mac 电脑，暂时不用去配置，你可以查看你 JDK 的默认安装目录，在终端工具执行下面的命令</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>/usr/libexec/java_home -V</span></span></code></pre></div><p>输出结果</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>Matching Java Virtual Machines (2):</span></span>
<span class="line"><span>    19.0.1 (arm64) &quot;Oracle Corporation&quot; - &quot;Java SE 19.0.1&quot; /Library/Java/JavaVirtualMachines/jdk-19.jdk/Contents/Home</span></span>
<span class="line"><span>    18.0.2 (arm64) &quot;Oracle Corporation&quot; - &quot;Java SE 18.0.2&quot; /Library/Java/JavaVirtualMachines/jdk-18.0.2.jdk/Contents/Home</span></span>
<span class="line"><span>/Library/Java/JavaVirtualMachines/jdk-19.jdk/Contents/Home</span></span></code></pre></div><p>最下面一行就是 JDK 默认安装路径</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>/Library/Java/JavaVirtualMachines/jdk-19.jdk/Contents/Home</span></span></code></pre></div>`,24),n=[i];function o(c,l,d,h,r,v){return e(),s("div",null,n)}const k=a(p,[["render",o]]);export{b as __pageData,k as default};
